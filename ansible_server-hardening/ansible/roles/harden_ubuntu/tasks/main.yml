---
- debug: msg="add_deployment_user = {{ add_deployment_user }}"
- debug: msg="deployment_user = {{ deployment_user }}"
- debug: msg="deployment_group = {{ deployment_group }}"
- debug: msg="enable_stop_root_login = {{ enable_stop_root_login }}"
- debug: msg="minimum_public_keys_provided = {{ minimum_public_keys_provided }}"

- name: Update APT package cache
  action: apt update_cache=yes
  when: enable_auto_update

- name: Run apt-get upgrade
  action: apt upgrade=yes
  when: enable_auto_update

- name: Enable auto-udpate of packages
  include_tasks: auto-update.yml
  when: enable_auto_update

- name: Install fail2ban
  action: apt pkg=fail2ban state=present
  when: enable_fail2ban

- name: Install and configure ufw
  include_tasks: ufw.yml
  when: enable_ufw

- name: Create {{ deployment_group }} group
  action: group name={{ deployment_group }} state=present
  when: add_deployment_user

- name: Remove sudo group rights
  action: lineinfile dest=/etc/sudoers regexp="^%sudo" state=absent
  when: add_deployment_user

- name: Add {{ deployment_user }} user
  action: user name={{ deployment_user}} password={{ saras_password }} shell=/bin/bash groups={{ deployment_group }}
  when: add_deployment_user

- name: Add {{ deployment_user }} user to sudoers
  action: lineinfile dest=/etc/sudoers regexp="{{ deployment_user }} ALL" line="{{ deployment_user }} ALL=(ALL) ALL" state=present
  when: add_deployment_user

- name: Add authorized key(s) for the user {{ deployment_user }}
  action: authorized_key user={{ deployment_user }} key="{{ item }}" state=present
  with_file: '{{ public_keys }}'
  when: add_deployment_user and minimum_public_keys_provided

- name: Enable CalmAv for Ubuntu
  include_tasks: calmAv.yml
  when: calmAv_enable
- name: Disallow password authentication
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
  when: enable_stop_password_authentication
  notify: Restart ssh

- name: Disallow root SSH access
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
  when: enable_stop_root_login
  notify: Restart ssh

- name: Change the SSH default port to non-standard port
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^Port 22" line="Port 5555" state=present
  when: change_ssh_default_port
  notify: Restart ssh

- name: Take Instance Back-up
  include_tasks: backup_ec2.yml
  when: backup_ec2
